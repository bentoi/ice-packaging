#!/usr/bin/make -f
# -*- makefile -*-

export DEB_BUILD_OPTIONS = nocheck notest -j4

#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

export OPTIMIZE=yes
export prefix=/usr
export CLASSPATH=/usr/share/java/proguard.jar
export DESTDIR=$(CURDIR)/debian/tmp
export GRADLE_HOME=$(HOME)/.gradle
export GRADLE = ./gradlew -g $(GRADLE_HOME)
export CLOSURE_COMPILER=/usr/share/java/closure-compiler.jar

PACKAGE_NAMES = zeroc-ice \
	zeroc-ice-dev \
	zeroc-ice-slice \
	libzeroc-ice3.6 \
	libzeroc-freeze3.6 \
	php5-zeroc-ice \
	zeroc-glacier2 \
	zeroc-icebox \
	zeroc-icegrid \
	libzeroc-icestorm3.6 \
	zeroc-icepatch2 \
	zeroc-ice-utils \
	zeroc-ice-utils-java \
	libzeroc-ice-dev \
	libzeroc-ice-java \
	php5-zeroc-ice-dev

CPP11_DESTDIR = $(CURDIR)/debian/tmp-cpp11
CPP11_LIB_NAMES = 	libFreeze \
	libGlacier2 \
	libIce \
	libIceBox \
	libIceDiscovery \
	libIceGrid \
	libIceLocatorDiscovery \
	libIcePatch2 \
	libIceSSL \
	libIceStorm \
	libIceStormService \
	libIceUtil

VERSION = 3.6.0

ARTIFACT_NAMES = freeze \
	glacier2 \
	ice \
	icebox \
	icediscovery \
	icegrid \
	icelocatordiscovery \
	icepatch2 \
	icestorm \
	ant-ice \
	ice-gradle-plugin

ifeq ($(DEB_HOST_MULTIARCH),i386-linux-gnu)
ICEBOX = icebox32
else
ICEBOX = icebox
endif

icebox_install:
	@echo usr/bin/$(ICEBOX) > $(CURDIR)/debian/zeroc-icebox.install
	@echo usr/bin/$(ICEBOX)++11 >> $(CURDIR)/debian/zeroc-icebox.install
	@echo usr/share/man/man1/icebox.1 >> $(CURDIR)/debian/zeroc-icebox.install

%:
	dh $@ --with php5 --with javahelper

override_dh_auto_build:
	cp -r cpp cpp11
	cd cpp11/src && CPP11=yes $(MAKE) -j4
	$(MAKE) -j4 embedded_runpath_prefix=""

override_dh_auto_install:
	cd cpp11 && DESTDIR=$(CPP11_DESTDIR) CPP11=yes $(MAKE) install
	#
	# Continue with regular dh_auto_install
	#
	dh_auto_install

override_dh_install: icebox_install
	#
	# Sign JAR files
	#
	@if test "$(SIGNJARS)" = "yes" ; \
        then \
		echo "signing jar file: $(DESTDIR)/usr/share/java/icegridgui.jar" ; \
		jarsigner -keystore $(JARSIGNER_KEYSTORE) -storepass "$(JARSIGNER_KEYSTORE_PASSWORD)" \
			$(DESTDIR)/usr/share/java/icegridgui.jar zeroc.com -tsa http://timestamp.digicert.com > /dev/null ; \
        fi

	#
	# Install Maven artifact
	#
	for name in $(ARTIFACT_NAMES) ; \
	do \
		cd $(CURDIR) ; \
		mkdir -p $(DESTDIR)/$(prefix)/share/maven-repo/com/zeroc/$$name/$(VERSION) ; \
		mv $(DESTDIR)/$(prefix)/share/java/$$name-$(VERSION).pom $(DESTDIR)/$(prefix)/share/maven-repo/com/zeroc/$$name/$(VERSION) ; \
		cd $(DESTDIR)/$(prefix)/share/maven-repo/com/zeroc/$$name/$(VERSION) && ln -s ../../../../../java/$$name-$(VERSION).jar . ; \
		cd $(DESTDIR)/$(prefix)/share/maven-repo/com/zeroc/$$name/$(VERSION) && ln -s ../../../../../java/$$name-$(VERSION)-source.jar . ; \
	done ;

	mkdir -p $(DESTDIR)$(prefix)/lib/$(DEB_HOST_MULTIARCH)/c++11

	#
	# Move C++11 libarries and binaries to their locations
	#
	for name in $(CPP11_LIB_NAMES) ; \
	do \
		cp $(CPP11_DESTDIR)$(prefix)/lib/$(DEB_HOST_MULTIARCH)/$$name++11*.so* $(DESTDIR)$(prefix)/lib/$(DEB_HOST_MULTIARCH) ; \
		cp $(CPP11_DESTDIR)$(prefix)/lib/$(DEB_HOST_MULTIARCH)/c++11/$$name.so $(DESTDIR)$(prefix)/lib/$(DEB_HOST_MULTIARCH)/c++11/$$name.so ; \
	done ;

	cp $(CPP11_DESTDIR)$(prefix)/bin/$(ICEBOX)++11 $(DESTDIR)$(prefix)/bin/$(ICEBOX)++11

	mkdir -p $(DESTDIR)$(prefix)/bin
	cp java/bin/icegridgui.deb $(DESTDIR)$(prefix)/bin/icegridgui && \
	chmod 755 $(DESTDIR)$(prefix)/bin/icegridgui

	mkdir -p $(DESTDIR)/etc/php5/mods-available

	mkdir -p $(DESTDIR)/etc
	cp debian/zeroc-glacier2.glacier2router.conf $(DESTDIR)/etc/glacier2router.conf
	cp debian/zeroc-icegrid.icegridnode.conf $(DESTDIR)/etc/icegridnode.conf
	cp debian/zeroc-icegrid.icegridregistry.conf $(DESTDIR)/etc/icegridregistry.conf

	mkdir -p $(DESTDIR)/etc/init.d
	cp debian/zeroc-glacier2.glacier2router $(DESTDIR)/etc/init.d/glacier2router
	chmod 755 $(DESTDIR)/etc/init.d/glacier2router

	cp debian/zeroc-icegrid.icegridnode $(DESTDIR)/etc/init.d/icegridnode
	chmod 755 $(DESTDIR)/etc/init.d/icegridnode

	cp debian/zeroc-icegrid.icegridregistry $(DESTDIR)/etc/init.d/icegridregistry
	chmod 755 $(DESTDIR)/etc/init.d/icegridregistry

	mkdir -p $(DESTDIR)/var/lib/ice/icegrid/registry
	mkdir -p $(DESTDIR)/var/lib/ice/icegrid/node1

	#
	# Continue with regular dh_install
	#
	dh_install

	#
	# Copy package readme
	#
	for name in $(PACKAGE_NAMES) ; \
	do \
		mkdir -p $(DESTDIR)$(prefix)/share/doc/$$name ; \
		cp debian/README.Linux $(DESTDIR)$(prefix)/share/doc/$$name/README ; \
	done ;

	cp debian/JGOODIES_LICENSE $(DESTDIR)$(prefix)/share/doc/zeroc-ice-utils-java/JGOODIES_LICENSE

override_dh_clean:
	dh_clean
	rm -rf cpp11
	rm -rf java/lib/ice-gradle-plugin-3.6.0.jar
	rm -rf java/lib/ice-gradle-plugin-3.6.0.pom
	rm -rf java/lib/ice-gradle-plugin-3.6.0-source.jar
	rm -rf java/buildSrc/build
	rm -rf java/buildSrc/.gradle
	rm -rf java/buildSrc/buildSrc.pom
	rm -rf java/.gradle/2.1/taskArtifacts/cache.properties.lock
	rm -rf java/.gradle/2.1/taskArtifacts/*
	rm -rf debian/tmp-cpp11
